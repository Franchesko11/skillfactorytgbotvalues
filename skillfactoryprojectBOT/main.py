import telebot
from config import keys, TOKEN
from extensions import APIException, CryptoConverter

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    username = message.from_user.username if message.from_user.username else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    text = f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {username}! \nüí≤ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º /help"
    bot.reply_to(message, text)

@bot.message_handler(commands=['help'])
def help_message(message: telebot.types.Message):
    text = (
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n"
        "<–∏–º—è –≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã> \n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: \"USD EUR 10\". –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values"
    )
    bot.reply_to(message, text)

@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:'
    for key in keys.keys():
        text += f'\n{key}'
    bot.reply_to(message, text)

@bot.message_handler(commands=["convert"])
def command_handler(message: telebot.types.Message):
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–≤–∞–ª—é—Ç–∞> <–≤–∞–ª—é—Ç–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>")

@bot.message_handler(func=lambda message: True)
def process_conversion(message: telebot.types.Message):
    values = message.text.split(' ')

    if len(values) != 3:
        bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <–≤–∞–ª—é—Ç–∞_1> <–≤–∞–ª—é—Ç–∞_2> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>")
        return

    try:
        quote, base, amount = values

        if not amount.replace(',', '.').replace('.', '', 1).isdigit():
            raise APIException('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.')

        amount = float(amount.replace(',', '.'))

        total_base = CryptoConverter.get_price(quote, base, amount)
        text = f'{amount} {quote} —Å—Ç–æ–∏—Ç {total_base} {base}'
        bot.send_message(message.chat.id, text)

    except APIException as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞: {e}')
    except Exception as e:
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É: {e}')

if __name__ == '__main__':
    bot.set_my_commands([
        telebot.types.BotCommand("/start", "–ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º"),
        telebot.types.BotCommand("/help", "–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö"),
        telebot.types.BotCommand("/values", "–£–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã"),
        telebot.types.BotCommand("/convert", "–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    ])
    bot.polling()